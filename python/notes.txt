
- samd
	x use sam.user.Sam
	x load skill lobby
	x execute skill lobby
	x use sam.user.lobby.switchboard.comm.Server
	- move users and groups from webchat to reception
	- fold webchat into lobby
	- delete webchat.py

- samcli
	x use sam.comm.Client
	o- use sam.comm.Message
	- proper message when connection fails because server not up

make wsgi stub
	link it into passenger_wsgi
	link it into samweb

goal:  create two clones and let them have a human conversation together

support clones
	clones = []
	clone.append(Sam('Sam'))
	clone.append(Sam('Lee'))

message passing
	send to everyone
	first guy to accept it stops the broadcast

human protocols
	languages are sometimes mixed
	sawat di krup.  see you.

commuter can reduce a sentence to numbers, word ids
	subject adj verb adv object adj
	subject adj verb adv nominative adj

human languages screw with word order
	computer should maybe be flexible with word order
	part of deconstructing a human utterance is untangling the word order

what if protocols are extended to include regurgitation of stories from local news media?

inter-clone conversation
	each clone has an address, ip:port, 127.0.0.1:5795
	each clone has a server socket
	when one clone wants to talk to another
		he can create a client socket to do so
	can a python program use a websocket directly, without the http server?
		or would he use something like wget?


