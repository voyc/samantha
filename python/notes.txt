Message
	to
	frm
	msg

Message-In
	toname=''    # to sam unless specific reply to another user in the conversation
	frmtoken=''  # blank if not logged in
	msg=''       # msg string

Message-Out
	toname=''    # an aside, in case of forwarding msg to another user
	frmtoken=''  # unused
	frmuser=User instance  # added during security check
	frmclearance = 0       # added during security check
	msg=''       # msg string	

Should clearance be added to Message?
No
User must include roles: admin, coach, student
clearance is immediate: logged in, not, offender
offender may or may not be recorded on user record
	such as when repeat non-logged in activity detected



toname is used only in the case of a forward from one user to another
if toname is present, command should be 'forward'
what about multiple ais?


x pass Message object between Client and Server, samd and samcli, use string name for from and to, later replaced with token
- build out Reception from samchat, users and groups, archive samchat
- samcli, print proper message when connection fails because server not up
- reimplement samcli as Human, loading skill connect, wrapping comm.Client, plus keyboard (skill?)
- implement skill converse
- implement leed, with skills connect and converse, conversing with samd
- implement security, account, built into converse: "what is your name?" "do you really want to change your password?"
- test with webserver


make wsgi stub
	link it into passenger_wsgi
	link it into samweb

goal:  create two clones and let them have a human conversation together

support clones
	clones = []
	clone.append(Sam('Sam'))
	clone.append(Sam('Lee'))

message passing
	send to everyone
	first guy to accept it stops the broadcast

human protocols
	languages are sometimes mixed
	sawat di krup.  see you.

commuter can reduce a sentence to numbers, word ids
	subject adj verb adv object adj
	subject adj verb adv nominative adj

human languages screw with word order
	computer should maybe be flexible with word order
	part of deconstructing a human utterance is untangling the word order

what if protocols are extended to include regurgitation of stories from local news media?

inter-clone conversation
	each clone has an address, ip:port, 127.0.0.1:5795
	each clone has a server socket
	when one clone wants to talk to another
		he can create a client socket to do so
	can a python program use a websocket directly, without the http server?
		or would he use something like wget?


